//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ItemListWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ItemList), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("UnInit", UnInit);
		L.RegFunction("Clear", Clear);
		L.RegFunction("DeepClear", DeepClear);
		L.RegFunction("InstantiateItemList", InstantiateItemList);
		L.RegFunction("CheckPool", CheckPool);
		L.RegFunction("InstantiateItem", InstantiateItem);
		L.RegFunction("RemoveItem", RemoveItem);
		L.RegFunction("LookatByIdx", LookatByIdx);
		L.RegFunction("SetChildActive", SetChildActive);
		L.RegFunction("ResetContentToButtom", ResetContentToButtom);
		L.RegFunction("ResetContentToTop", ResetContentToTop);
		L.RegFunction("SetInstantiateAction", SetInstantiateAction);
		L.RegFunction("SetDynamicTotalCount", SetDynamicTotalCount);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_content_root", get_m_content_root, set_m_content_root);
		L.RegVar("m_template", get_m_template, set_m_template);
		L.RegVar("m_trans_list", get_m_trans_list, set_m_trans_list);
		L.RegVar("Count", get_Count, null);
		L.RegVar("CellCountEachline", null, set_CellCountEachline);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			System.Action<UnityEngine.Transform,int> arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action<UnityEngine.Transform,int>)ToLua.CheckObject(L, 2, typeof(System.Action<UnityEngine.Transform,int>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action<UnityEngine.Transform,int>), func) as System.Action<UnityEngine.Transform,int>;
			}

			obj.Init(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			obj.UnInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeepClear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			obj.DeepClear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InstantiateItemList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.InstantiateItemList(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckPool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			obj.CheckPool();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InstantiateItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			UnityEngine.Transform o = obj.InstantiateItem();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveItem(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(ItemList), typeof(UnityEngine.Transform)))
			{
				ItemList obj = (ItemList)ToLua.ToObject(L, 1);
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 2);
				obj.RemoveItem(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(ItemList), typeof(int)))
			{
				ItemList obj = (ItemList)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.RemoveItem(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ItemList.RemoveItem");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookatByIdx(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LookatByIdx(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetChildActive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetChildActive(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetContentToButtom(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			obj.ResetContentToButtom();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetContentToTop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			obj.ResetContentToTop();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInstantiateAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			System.Action<UnityEngine.Transform,int> arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action<UnityEngine.Transform,int>)ToLua.CheckObject(L, 2, typeof(System.Action<UnityEngine.Transform,int>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action<UnityEngine.Transform,int>), func) as System.Action<UnityEngine.Transform,int>;
			}

			obj.SetInstantiateAction(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDynamicTotalCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ItemList obj = (ItemList)ToLua.CheckObject(L, 1, typeof(ItemList));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetDynamicTotalCount(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_content_root(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			UnityEngine.Transform ret = obj.m_content_root;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_content_root on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_template(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			UnityEngine.Transform ret = obj.m_template;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_template on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_trans_list(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			System.Collections.Generic.List<UnityEngine.Transform> ret = obj.m_trans_list;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_trans_list on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			int ret = obj.Count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Count on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_content_root(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.m_content_root = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_content_root on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_template(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.m_template = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_template on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_trans_list(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			System.Collections.Generic.List<UnityEngine.Transform> arg0 = (System.Collections.Generic.List<UnityEngine.Transform>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Transform>));
			obj.m_trans_list = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_trans_list on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CellCountEachline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ItemList obj = (ItemList)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.CellCountEachline = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CellCountEachline on a nil value" : e.Message);
		}
	}
}

