//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class VersionInfo2Wrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(VersionInfo2), typeof(System.Object));
		L.RegFunction("AddRes", AddRes);
		L.RegFunction("ParseData", ParseData);
		L.RegFunction("Serialize", Serialize);
		L.RegFunction("SerializeInEditor", SerializeInEditor);
		L.RegFunction("New", _CreateVersionInfo2);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("dictRes", get_dictRes, set_dictRes);
		L.RegVar("ProgramVersion", get_ProgramVersion, set_ProgramVersion);
		L.RegVar("ApkUrl", get_ApkUrl, set_ApkUrl);
		L.RegVar("ApkMd5", get_ApkMd5, set_ApkMd5);
		L.RegVar("IOSAppUrl", get_IOSAppUrl, set_IOSAppUrl);
		L.RegVar("IOSAppStoreUrl", get_IOSAppStoreUrl, set_IOSAppStoreUrl);
		L.RegVar("IsAppleAppStore", get_IsAppleAppStore, set_IsAppleAppStore);
		L.RegVar("IsOpenAutoUpdateInAppStore", get_IsOpenAutoUpdateInAppStore, set_IsOpenAutoUpdateInAppStore);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateVersionInfo2(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				VersionInfo2 obj = new VersionInfo2();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: VersionInfo2.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddRes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VersionInfo2 obj = (VersionInfo2)ToLua.CheckObject(L, 1, typeof(VersionInfo2));
			ResInfo arg0 = (ResInfo)ToLua.CheckObject(L, 2, typeof(ResInfo));
			obj.AddRes(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ParseData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			VersionInfo2 o = VersionInfo2.ParseData(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			VersionInfo2 arg0 = (VersionInfo2)ToLua.CheckObject(L, 1, typeof(VersionInfo2));
			string o = VersionInfo2.Serialize(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SerializeInEditor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Collections.Generic.List<ResInfo> arg0 = (System.Collections.Generic.List<ResInfo>)ToLua.CheckObject(L, 1, typeof(System.Collections.Generic.List<ResInfo>));
			string o = VersionInfo2.SerializeInEditor(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dictRes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			System.Collections.Generic.Dictionary<string,ResInfo> ret = obj.dictRes;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dictRes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProgramVersion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			float ret = obj.ProgramVersion;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ProgramVersion on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ApkUrl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string ret = obj.ApkUrl;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ApkUrl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ApkMd5(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string ret = obj.ApkMd5;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ApkMd5 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IOSAppUrl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string ret = obj.IOSAppUrl;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IOSAppUrl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IOSAppStoreUrl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string ret = obj.IOSAppStoreUrl;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IOSAppStoreUrl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsAppleAppStore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			bool ret = obj.IsAppleAppStore;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsAppleAppStore on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsOpenAutoUpdateInAppStore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			bool ret = obj.IsOpenAutoUpdateInAppStore;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsOpenAutoUpdateInAppStore on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dictRes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			System.Collections.Generic.Dictionary<string,ResInfo> arg0 = (System.Collections.Generic.Dictionary<string,ResInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,ResInfo>));
			obj.dictRes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dictRes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ProgramVersion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ProgramVersion = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ProgramVersion on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ApkUrl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ApkUrl = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ApkUrl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ApkMd5(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ApkMd5 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ApkMd5 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IOSAppUrl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.IOSAppUrl = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IOSAppUrl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IOSAppStoreUrl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.IOSAppStoreUrl = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IOSAppStoreUrl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsAppleAppStore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsAppleAppStore = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsAppleAppStore on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsOpenAutoUpdateInAppStore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VersionInfo2 obj = (VersionInfo2)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsOpenAutoUpdateInAppStore = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsOpenAutoUpdateInAppStore on a nil value" : e.Message);
		}
	}
}

